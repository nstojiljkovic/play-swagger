
->   /                     liveMeta.Routes
->   /api/player           player.Routes
->   /api/resource         resource.Routes
->   /api/customResource   customResource.Routes
->   /api/students         students.Routes

->   /level1               level1.Routes

->   /no-routes            no.Routes

->   /aCustomerRouter      com.myCompany.Router

->   /references           referencing.Routes

->   /zoo                  zoo.Routes

GET  /abc                  com.github.nstojiljkovic.Application.test()

###
#  summary: Creates a FooWithSeq
#  responses:
#    200:
#      schema:
#        $ref: '#/definitions/com.github.nstojiljkovic.playSwagger.FooWithSeq2'
###
POST /post-body            com.github.nstojiljkovic.Application.postBody()

###
#  parameters:
#    - name: body
#      description: polymorphic example
#      schema:
#        $ref: '#/definitions/com.github.nstojiljkovic.playSwagger.PolymorphicContainer'
###
POST     /somethingPolymorphic             controllers.Player.somethingPolymorphic()

###
#  parameters:
#    - name: body
#      description: java enum example
#      schema:
#        $ref: '#/definitions/com.github.nstojiljkovic.playSwagger.EnumContainer'
###
POST     /somethingWithEnum                controllers.Player.somethingWithEnum()

###
#  parameters:
#    - name: body
#      description: option example
#      schema:
#        $ref: '#/definitions/com.github.nstojiljkovic.playSwagger.AllOptional'
#  responses:
#    default:
#      description: Something optional
#      schema:
#        $ref: '#/definitions/com.github.nstojiljkovic.playSwagger.AllOptional'
###
POST     /somethingOptional                controllers.Player.somethingOptional()


###
# parameters:
#   - name: body
#     in: query
#     type: string
###
POST  /iWantAQueryBody                     controllers.Test.queryBodyHandler(body)

###
#  responses:
#    default:
#      description: Something optional
#      schema:
#        $ref: '#/definitions/com.github.nstojiljkovic.playSwagger.Parent'
###
GET  /iWantAChild                     controllers.Test.queryForChild

